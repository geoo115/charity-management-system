name: Basic Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write

jobs:
  # Basic vulnerability scanning
  vulnerability-scan:
    name: Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Frontend vulnerability scan
    - name: Set up Node.js for frontend scan
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run npm audit
      working-directory: ./frontend
      continue-on-error: true
      run: |
        echo "Running npm audit..."
        npm audit --audit-level=moderate || echo "Vulnerabilities found, please review"

    # Backend vulnerability scan
    - name: Set up Go for backend scan
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache-dependency-path: backend/go.sum

    - name: Run Go vulnerability check
      working-directory: ./backend
      continue-on-error: true
      run: |
        echo "Installing govulncheck..."
        go install golang.org/x/vuln/cmd/govulncheck@latest
        echo "Running vulnerability scan..."
        govulncheck ./... || echo "Vulnerabilities found, please review"

  # Basic static analysis
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache-dependency-path: backend/go.sum

    - name: Run Go vet
      working-directory: ./backend
      run: go vet ./...

    - name: Run staticcheck
      working-directory: ./backend
      continue-on-error: true
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./... || echo "Static analysis issues found"

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run ESLint
      working-directory: ./frontend
      continue-on-error: true
      run: npm run lint || echo "Linting issues found"

  # Secret scanning
  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run basic secret detection
      run: |
        echo "Checking for common secrets..."
        
        # Check for common secret patterns
        echo "Checking for API keys..."
        grep -r -i "api[_-]key\s*=" . --exclude-dir=.git --exclude-dir=node_modules || echo "No API keys found in files"
        
        echo "Checking for passwords in code..."
        grep -r -i "password\s*=" . --exclude-dir=.git --exclude-dir=node_modules --exclude="*.md" || echo "No hardcoded passwords found"
        
        echo "Checking for private keys..."
        find . -name "*.pem" -o -name "*.key" -o -name "*_rsa" | grep -v node_modules | head -5 || echo "No private key files found"
        
        echo "Secret scan completed"

  # Security report
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [vulnerability-scan, static-analysis, secret-scan]
    if: always()
    
    steps:
    - name: Generate security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "" >> security-summary.md
        echo "**Date:** $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)" >> security-summary.md
        echo "**Commit:** ${{ github.sha }}" >> security-summary.md
        echo "" >> security-summary.md
        echo "## Scan Results" >> security-summary.md
        echo "- Vulnerability Scan: ${{ needs.vulnerability-scan.result }}" >> security-summary.md
        echo "- Static Analysis: ${{ needs.static-analysis.result }}" >> security-summary.md
        echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-summary.md
        echo "" >> security-summary.md
        echo "## Recommendations" >> security-summary.md
        echo "- Keep dependencies updated" >> security-summary.md
        echo "- Review any failed scans" >> security-summary.md
        echo "- Follow security best practices" >> security-summary.md
        
        cat security-summary.md

    - name: Upload security summary
      uses: actions/upload-artifact@v4
      with:
        name: security-summary
        path: security-summary.md